{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(null);// Setup API base URL - will default to the current host\nconst API_URL=process.env.REACT_APP_API_URL||(window.location.hostname==='localhost'||window.location.hostname==='127.0.0.1'?`${window.location.protocol}//${window.location.hostname}:${window.location.port}`:'');// Empty string for same-origin requests in production\n// Token storage key\nconst TOKEN_STORAGE_KEY='budget-tracker-token';const USER_STORAGE_KEY='budget-tracker-user';// Add the token to all axios requests\naxios.interceptors.request.use(config=>{const token=localStorage.getItem(TOKEN_STORAGE_KEY);if(token){config.headers['Authorization']=`Bearer ${token}`;}return config;},error=>{return Promise.reject(error);});export const AuthProvider=_ref=>{let{children}=_ref;const[currentUser,setCurrentUser]=useState(null);const[token,setToken]=useState(null);const[loading,setLoading]=useState(true);// On init, check for saved token and user\nuseEffect(()=>{const storedToken=localStorage.getItem(TOKEN_STORAGE_KEY);const storedUser=localStorage.getItem(USER_STORAGE_KEY);if(storedToken&&storedUser){try{setToken(storedToken);setCurrentUser(JSON.parse(storedUser));}catch(error){console.error('Failed to parse stored user data',error);// Clear invalid data\nlocalStorage.removeItem(TOKEN_STORAGE_KEY);localStorage.removeItem(USER_STORAGE_KEY);}}setLoading(false);},[]);// Save user and token data when they change\nuseEffect(()=>{if(currentUser&&token){localStorage.setItem(USER_STORAGE_KEY,JSON.stringify(currentUser));localStorage.setItem(TOKEN_STORAGE_KEY,token);}else{localStorage.removeItem(USER_STORAGE_KEY);localStorage.removeItem(TOKEN_STORAGE_KEY);}},[currentUser,token]);const login=async(email,password)=>{setLoading(true);try{const response=await axios.post(`${API_URL}/api/auth/login`,{email,password});const{token,user}=response.data;setToken(token);setCurrentUser({id:user.id,username:user.username,email:user.email});setLoading(false);return true;}catch(error){console.error('Login error:',error);setLoading(false);return false;}};const register=async(username,email,password)=>{setLoading(true);try{console.log('Making registration API request to:',`${API_URL}/api/auth/register`);const response=await axios.post(`${API_URL}/api/auth/register`,{username,email,password});console.log('Registration response:',response.data);const{token,user}=response.data;setToken(token);setCurrentUser({id:user.id,username:user.username,email:user.email});setLoading(false);return true;}catch(error){console.error('Registration error:',error);// Log detailed error information\nif(error.response){// The request was made and the server responded with a status code\n// that falls out of the range of 2xx\nconsole.error('Server error response:',{data:error.response.data,status:error.response.status,headers:error.response.headers});}else if(error.request){// The request was made but no response was received\nconsole.error('No response received:',error.request);}else{// Something happened in setting up the request that triggered an Error\nconsole.error('Request setup error:',error.message);}setLoading(false);return false;}};const logout=()=>{setCurrentUser(null);setToken(null);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{currentUser,isAuthenticated:!!currentUser&&!!token,login,register,logout,loading,token},children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsx","_jsx","AuthContext","API_URL","process","env","REACT_APP_API_URL","window","location","hostname","protocol","port","TOKEN_STORAGE_KEY","USER_STORAGE_KEY","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","AuthProvider","_ref","children","currentUser","setCurrentUser","setToken","loading","setLoading","storedToken","storedUser","JSON","parse","console","removeItem","setItem","stringify","login","email","password","response","post","user","data","id","username","register","log","status","message","logout","Provider","value","isAuthenticated","useAuth","context","Error"],"sources":["C:/Users/Administrator/Downloads/personal-budget-tracker v2/personal-budget-tracker/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, ReactNode } from 'react';\nimport axios from 'axios';\n\ninterface User {\n  id: string;\n  username: string;\n  email: string;\n}\n\ninterface AuthContextType {\n  currentUser: User | null;\n  isAuthenticated: boolean;\n  login: (email: string, password: string) => Promise<boolean>;\n  register: (username: string, email: string, password: string) => Promise<boolean>;\n  logout: () => void;\n  loading: boolean;\n  token: string | null;\n}\n\nconst AuthContext = createContext<AuthContextType | null>(null);\n\n// Setup API base URL - will default to the current host\nconst API_URL = process.env.REACT_APP_API_URL || \n  (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1'\n    ? `${window.location.protocol}//${window.location.hostname}:${window.location.port}`\n    : ''); // Empty string for same-origin requests in production\n\n// Token storage key\nconst TOKEN_STORAGE_KEY = 'budget-tracker-token';\nconst USER_STORAGE_KEY = 'budget-tracker-user';\n\n// Add the token to all axios requests\naxios.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(TOKEN_STORAGE_KEY);\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [token, setToken] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  // On init, check for saved token and user\n  useEffect(() => {\n    const storedToken = localStorage.getItem(TOKEN_STORAGE_KEY);\n    const storedUser = localStorage.getItem(USER_STORAGE_KEY);\n    \n    if (storedToken && storedUser) {\n      try {\n        setToken(storedToken);\n        setCurrentUser(JSON.parse(storedUser));\n      } catch (error) {\n        console.error('Failed to parse stored user data', error);\n        // Clear invalid data\n        localStorage.removeItem(TOKEN_STORAGE_KEY);\n        localStorage.removeItem(USER_STORAGE_KEY);\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  // Save user and token data when they change\n  useEffect(() => {\n    if (currentUser && token) {\n      localStorage.setItem(USER_STORAGE_KEY, JSON.stringify(currentUser));\n      localStorage.setItem(TOKEN_STORAGE_KEY, token);\n    } else {\n      localStorage.removeItem(USER_STORAGE_KEY);\n      localStorage.removeItem(TOKEN_STORAGE_KEY);\n    }\n  }, [currentUser, token]);\n\n  const login = async (email: string, password: string): Promise<boolean> => {\n    setLoading(true);\n    \n    try {\n      const response = await axios.post(`${API_URL}/api/auth/login`, { email, password });\n      const { token, user } = response.data;\n      \n      setToken(token);\n      setCurrentUser({\n        id: user.id,\n        username: user.username,\n        email: user.email\n      });\n      \n      setLoading(false);\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      setLoading(false);\n      return false;\n    }\n  };\n\n  const register = async (username: string, email: string, password: string): Promise<boolean> => {\n    setLoading(true);\n    \n    try {\n      console.log('Making registration API request to:', `${API_URL}/api/auth/register`);\n      const response = await axios.post(`${API_URL}/api/auth/register`, { username, email, password });\n      console.log('Registration response:', response.data);\n      \n      const { token, user } = response.data;\n      \n      setToken(token);\n      setCurrentUser({\n        id: user.id,\n        username: user.username,\n        email: user.email\n      });\n      \n      setLoading(false);\n      return true;\n    } catch (error: any) {\n      console.error('Registration error:', error);\n      \n      // Log detailed error information\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.error('Server error response:', {\n          data: error.response.data,\n          status: error.response.status,\n          headers: error.response.headers\n        });\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.error('No response received:', error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.error('Request setup error:', error.message);\n      }\n      \n      setLoading(false);\n      return false;\n    }\n  };\n\n  const logout = () => {\n    setCurrentUser(null);\n    setToken(null);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser,\n        isAuthenticated: !!currentUser && !!token,\n        login,\n        register,\n        logout,\n        loading,\n        token\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}