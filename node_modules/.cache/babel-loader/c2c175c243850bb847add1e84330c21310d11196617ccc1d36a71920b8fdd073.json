{"ast":null,"code":"import React,{useState}from'react';import{format}from'date-fns';import'./RecurringPayments.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export const RecurringPayments=_ref=>{let{recurringPayments,onAddRecurringPayment,onUpdateRecurringPayment,onDeleteRecurringPayment}=_ref;const[showAddForm,setShowAddForm]=useState(false);const[newPayment,setNewPayment]=useState({description:'',amount:0,type:'expense',scheduleType:'specific-date',frequency:'monthly',dayOfMonth:1,startDate:new Date(),validFrom:new Date(),isActive:true});const handleSubmit=e=>{e.preventDefault();onAddRecurringPayment(newPayment);setNewPayment({description:'',amount:0,type:'expense',scheduleType:'specific-date',frequency:'monthly',dayOfMonth:1,startDate:new Date(),validFrom:new Date(),isActive:true});setShowAddForm(false);};// Helper to format the schedule information in a human-readable way\nconst formatSchedule=payment=>{let scheduleText='';switch(payment.scheduleType){case'specific-date':if(payment.frequency==='monthly'&&payment.dayOfMonth){scheduleText=`Every month on the ${payment.dayOfMonth}${getDaySuffix(payment.dayOfMonth)}`;}else if(payment.frequency==='yearly'&&payment.dayOfMonth){const date=new Date(payment.startDate);scheduleText=`Every year on ${format(date,'MMMM')} ${payment.dayOfMonth}${getDaySuffix(payment.dayOfMonth)}`;}break;case'weekdays-only':scheduleText='Every weekday (Monday to Friday)';break;case'weekends-only':scheduleText='Every weekend (Saturday and Sunday)';break;case'custom-range':scheduleText=`From ${format(payment.startDate,'MMM dd, yyyy')}`;if(payment.endDate){scheduleText+=` to ${format(payment.endDate,'MMM dd, yyyy')}`;}break;}// Add frequency if not implied by the schedule type\nif(!scheduleText.includes('Every')&&payment.frequency){scheduleText=`${capitalizeFirstLetter(payment.frequency)}, ${scheduleText}`;}return scheduleText;};// Helper to get day suffix (1st, 2nd, 3rd, etc.)\nconst getDaySuffix=day=>{if(day>3&&day<21)return'th';switch(day%10){case 1:return'st';case 2:return'nd';case 3:return'rd';default:return'th';}};const capitalizeFirstLetter=string=>{return string.charAt(0).toUpperCase()+string.slice(1);};return/*#__PURE__*/_jsxs(\"div\",{className:\"recurring-payments\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Recurring Payments & Income\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowAddForm(!showAddForm),className:\"add-button\",children:showAddForm?'Cancel':'Add New Recurring Payment/Income'}),showAddForm&&/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"recurring-payment-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"description\",children:\"Description:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"description\",value:newPayment.description,onChange:e=>setNewPayment({...newPayment,description:e.target.value}),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"amount\",children:\"Amount:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"amount\",value:newPayment.amount,onChange:e=>setNewPayment({...newPayment,amount:parseFloat(e.target.value)}),required:true,step:\"0.01\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"type\",children:\"Type:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"type\",value:newPayment.type,onChange:e=>setNewPayment({...newPayment,type:e.target.value}),children:[/*#__PURE__*/_jsx(\"option\",{value:\"income\",children:\"Income\"}),/*#__PURE__*/_jsx(\"option\",{value:\"expense\",children:\"Expense\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"scheduleType\",children:\"Schedule Type:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"scheduleType\",value:newPayment.scheduleType,onChange:e=>setNewPayment({...newPayment,scheduleType:e.target.value}),children:[/*#__PURE__*/_jsx(\"option\",{value:\"specific-date\",children:\"Specific Date Each Month/Year\"}),/*#__PURE__*/_jsx(\"option\",{value:\"weekdays-only\",children:\"Weekdays Only (Mon-Fri)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"weekends-only\",children:\"Weekends Only (Sat-Sun)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"custom-range\",children:\"Custom Date Range\"})]})]}),newPayment.scheduleType==='specific-date'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"frequency\",children:\"Frequency:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"frequency\",value:newPayment.frequency,onChange:e=>setNewPayment({...newPayment,frequency:e.target.value}),children:[/*#__PURE__*/_jsx(\"option\",{value:\"monthly\",children:\"Monthly\"}),/*#__PURE__*/_jsx(\"option\",{value:\"yearly\",children:\"Yearly\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"dayOfMonth\",children:\"Day of Month:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"dayOfMonth\",min:\"1\",max:\"31\",value:newPayment.dayOfMonth,onChange:e=>setNewPayment({...newPayment,dayOfMonth:parseInt(e.target.value)}),required:true})]})]}),newPayment.scheduleType==='custom-range'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"frequency\",children:\"Frequency:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"frequency\",value:newPayment.frequency,onChange:e=>setNewPayment({...newPayment,frequency:e.target.value}),children:[/*#__PURE__*/_jsx(\"option\",{value:\"daily\",children:\"Daily\"}),/*#__PURE__*/_jsx(\"option\",{value:\"weekly\",children:\"Weekly\"}),/*#__PURE__*/_jsx(\"option\",{value:\"monthly\",children:\"Monthly\"}),/*#__PURE__*/_jsx(\"option\",{value:\"yearly\",children:\"Yearly\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"startDate\",children:\"Start Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"startDate\",value:format(newPayment.startDate,'yyyy-MM-dd'),onChange:e=>setNewPayment({...newPayment,startDate:new Date(e.target.value)}),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"endDate\",children:\"End Date (Optional):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"endDate\",value:newPayment.endDate?format(newPayment.endDate,'yyyy-MM-dd'):'',onChange:e=>setNewPayment({...newPayment,endDate:e.target.value?new Date(e.target.value):undefined})})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"validity-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Validity Period\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"validFrom\",children:\"Valid From:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"validFrom\",value:format(newPayment.validFrom,'yyyy-MM-dd'),onChange:e=>setNewPayment({...newPayment,validFrom:new Date(e.target.value)}),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"validUntil\",children:\"Valid Until (Optional):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"validUntil\",value:newPayment.validUntil?format(newPayment.validUntil,'yyyy-MM-dd'):'',onChange:e=>setNewPayment({...newPayment,validUntil:e.target.value?new Date(e.target.value):undefined})})]})]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-button\",children:\"Add Recurring Payment/Income\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"recurring-payments-list\",children:recurringPayments.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"no-payments\",children:\"No recurring payments or income added yet.\"}):recurringPayments.map(payment=>/*#__PURE__*/_jsxs(\"div\",{className:`recurring-payment-item ${payment.type}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"payment-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:payment.description}),/*#__PURE__*/_jsxs(\"p\",{className:\"amount\",children:[/*#__PURE__*/_jsxs(\"span\",{className:payment.type==='income'?'income-amount':'expense-amount',children:[\"$\",payment.amount.toFixed(2)]}),/*#__PURE__*/_jsx(\"span\",{className:\"type-badge\",children:payment.type})]}),/*#__PURE__*/_jsx(\"p\",{className:\"schedule\",children:formatSchedule(payment)}),/*#__PURE__*/_jsxs(\"p\",{className:\"validity\",children:[\"Valid from \",format(payment.validFrom,'MMM dd, yyyy'),payment.validUntil&&` until ${format(payment.validUntil,'MMM dd, yyyy')}`]}),/*#__PURE__*/_jsxs(\"p\",{className:\"status\",children:[\"Status: \",/*#__PURE__*/_jsx(\"span\",{className:payment.isActive?'active':'inactive',children:payment.isActive?'Active':'Inactive'})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>onUpdateRecurringPayment({...payment,isActive:!payment.isActive}),className:payment.isActive?'deactivate-button':'activate-button',children:payment.isActive?'Deactivate':'Activate'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{if(window.confirm('Are you sure you want to delete this recurring payment?')){onDeleteRecurringPayment(payment.id);}},className:\"delete-button\",children:\"Delete\"})]})]},payment.id))})]});};","map":{"version":3,"names":["React","useState","format","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","RecurringPayments","_ref","recurringPayments","onAddRecurringPayment","onUpdateRecurringPayment","onDeleteRecurringPayment","showAddForm","setShowAddForm","newPayment","setNewPayment","description","amount","type","scheduleType","frequency","dayOfMonth","startDate","Date","validFrom","isActive","handleSubmit","e","preventDefault","formatSchedule","payment","scheduleText","getDaySuffix","date","endDate","includes","capitalizeFirstLetter","day","string","charAt","toUpperCase","slice","className","children","onClick","onSubmit","htmlFor","id","value","onChange","target","required","parseFloat","step","min","max","parseInt","undefined","validUntil","length","map","toFixed","window","confirm"],"sources":["C:/Users/Administrator/Downloads/personal-budget-tracker v2/personal-budget-tracker/src/components/RecurringPayments.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { RecurringPayment, RecurringScheduleType } from '../types';\nimport { format } from 'date-fns';\nimport './RecurringPayments.css';\n\ninterface RecurringPaymentsProps {\n  recurringPayments: RecurringPayment[];\n  onAddRecurringPayment: (payment: Omit<RecurringPayment, 'id'>) => void;\n  onUpdateRecurringPayment: (payment: RecurringPayment) => void;\n  onDeleteRecurringPayment: (id: string) => void;\n}\n\nexport const RecurringPayments: React.FC<RecurringPaymentsProps> = ({\n  recurringPayments,\n  onAddRecurringPayment,\n  onUpdateRecurringPayment,\n  onDeleteRecurringPayment,\n}) => {\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [newPayment, setNewPayment] = useState<Omit<RecurringPayment, 'id'>>({\n    description: '',\n    amount: 0,\n    type: 'expense',\n    scheduleType: 'specific-date',\n    frequency: 'monthly',\n    dayOfMonth: 1,\n    startDate: new Date(),\n    validFrom: new Date(),\n    isActive: true,\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onAddRecurringPayment(newPayment);\n    setNewPayment({\n      description: '',\n      amount: 0,\n      type: 'expense',\n      scheduleType: 'specific-date',\n      frequency: 'monthly',\n      dayOfMonth: 1,\n      startDate: new Date(),\n      validFrom: new Date(),\n      isActive: true,\n    });\n    setShowAddForm(false);\n  };\n\n  // Helper to format the schedule information in a human-readable way\n  const formatSchedule = (payment: RecurringPayment): string => {\n    let scheduleText = '';\n    \n    switch (payment.scheduleType) {\n      case 'specific-date':\n        if (payment.frequency === 'monthly' && payment.dayOfMonth) {\n          scheduleText = `Every month on the ${payment.dayOfMonth}${getDaySuffix(payment.dayOfMonth)}`;\n        } else if (payment.frequency === 'yearly' && payment.dayOfMonth) {\n          const date = new Date(payment.startDate);\n          scheduleText = `Every year on ${format(date, 'MMMM')} ${payment.dayOfMonth}${getDaySuffix(payment.dayOfMonth)}`;\n        }\n        break;\n      case 'weekdays-only':\n        scheduleText = 'Every weekday (Monday to Friday)';\n        break;\n      case 'weekends-only':\n        scheduleText = 'Every weekend (Saturday and Sunday)';\n        break;\n      case 'custom-range':\n        scheduleText = `From ${format(payment.startDate, 'MMM dd, yyyy')}`;\n        if (payment.endDate) {\n          scheduleText += ` to ${format(payment.endDate, 'MMM dd, yyyy')}`;\n        }\n        break;\n    }\n\n    // Add frequency if not implied by the schedule type\n    if (!scheduleText.includes('Every') && payment.frequency) {\n      scheduleText = `${capitalizeFirstLetter(payment.frequency)}, ${scheduleText}`;\n    }\n\n    return scheduleText;\n  };\n\n  // Helper to get day suffix (1st, 2nd, 3rd, etc.)\n  const getDaySuffix = (day: number): string => {\n    if (day > 3 && day < 21) return 'th';\n    switch (day % 10) {\n      case 1: return 'st';\n      case 2: return 'nd';\n      case 3: return 'rd';\n      default: return 'th';\n    }\n  };\n\n  const capitalizeFirstLetter = (string: string): string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  return (\n    <div className=\"recurring-payments\">\n      <h2>Recurring Payments & Income</h2>\n      <button onClick={() => setShowAddForm(!showAddForm)} className=\"add-button\">\n        {showAddForm ? 'Cancel' : 'Add New Recurring Payment/Income'}\n      </button>\n\n      {showAddForm && (\n        <form onSubmit={handleSubmit} className=\"recurring-payment-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Description:</label>\n            <input\n              type=\"text\"\n              id=\"description\"\n              value={newPayment.description}\n              onChange={(e) => setNewPayment({ ...newPayment, description: e.target.value })}\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"amount\">Amount:</label>\n            <input\n              type=\"number\"\n              id=\"amount\"\n              value={newPayment.amount}\n              onChange={(e) => setNewPayment({ ...newPayment, amount: parseFloat(e.target.value) })}\n              required\n              step=\"0.01\"\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"type\">Type:</label>\n            <select\n              id=\"type\"\n              value={newPayment.type}\n              onChange={(e) => setNewPayment({ ...newPayment, type: e.target.value as 'income' | 'expense' })}\n            >\n              <option value=\"income\">Income</option>\n              <option value=\"expense\">Expense</option>\n            </select>\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"scheduleType\">Schedule Type:</label>\n            <select\n              id=\"scheduleType\"\n              value={newPayment.scheduleType}\n              onChange={(e) => setNewPayment({ \n                ...newPayment, \n                scheduleType: e.target.value as RecurringScheduleType \n              })}\n            >\n              <option value=\"specific-date\">Specific Date Each Month/Year</option>\n              <option value=\"weekdays-only\">Weekdays Only (Mon-Fri)</option>\n              <option value=\"weekends-only\">Weekends Only (Sat-Sun)</option>\n              <option value=\"custom-range\">Custom Date Range</option>\n            </select>\n          </div>\n          \n          {newPayment.scheduleType === 'specific-date' && (\n            <>\n              <div className=\"form-group\">\n                <label htmlFor=\"frequency\">Frequency:</label>\n                <select\n                  id=\"frequency\"\n                  value={newPayment.frequency}\n                  onChange={(e) => setNewPayment({ \n                    ...newPayment, \n                    frequency: e.target.value as RecurringPayment['frequency'] \n                  })}\n                >\n                  <option value=\"monthly\">Monthly</option>\n                  <option value=\"yearly\">Yearly</option>\n                </select>\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"dayOfMonth\">Day of Month:</label>\n                <input\n                  type=\"number\"\n                  id=\"dayOfMonth\"\n                  min=\"1\"\n                  max=\"31\"\n                  value={newPayment.dayOfMonth}\n                  onChange={(e) => setNewPayment({ \n                    ...newPayment, \n                    dayOfMonth: parseInt(e.target.value) \n                  })}\n                  required\n                />\n              </div>\n            </>\n          )}\n          \n          {newPayment.scheduleType === 'custom-range' && (\n            <>\n              <div className=\"form-group\">\n                <label htmlFor=\"frequency\">Frequency:</label>\n                <select\n                  id=\"frequency\"\n                  value={newPayment.frequency}\n                  onChange={(e) => setNewPayment({ \n                    ...newPayment, \n                    frequency: e.target.value as RecurringPayment['frequency'] \n                  })}\n                >\n                  <option value=\"daily\">Daily</option>\n                  <option value=\"weekly\">Weekly</option>\n                  <option value=\"monthly\">Monthly</option>\n                  <option value=\"yearly\">Yearly</option>\n                </select>\n              </div>\n              \n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"startDate\">Start Date:</label>\n                  <input\n                    type=\"date\"\n                    id=\"startDate\"\n                    value={format(newPayment.startDate, 'yyyy-MM-dd')}\n                    onChange={(e) => setNewPayment({ \n                      ...newPayment, \n                      startDate: new Date(e.target.value) \n                    })}\n                    required\n                  />\n                </div>\n                \n                <div className=\"form-group\">\n                  <label htmlFor=\"endDate\">End Date (Optional):</label>\n                  <input\n                    type=\"date\"\n                    id=\"endDate\"\n                    value={newPayment.endDate ? format(newPayment.endDate, 'yyyy-MM-dd') : ''}\n                    onChange={(e) => setNewPayment({ \n                      ...newPayment, \n                      endDate: e.target.value ? new Date(e.target.value) : undefined \n                    })}\n                  />\n                </div>\n              </div>\n            </>\n          )}\n          \n          <div className=\"validity-section\">\n            <h3>Validity Period</h3>\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"validFrom\">Valid From:</label>\n                <input\n                  type=\"date\"\n                  id=\"validFrom\"\n                  value={format(newPayment.validFrom, 'yyyy-MM-dd')}\n                  onChange={(e) => setNewPayment({ \n                    ...newPayment, \n                    validFrom: new Date(e.target.value) \n                  })}\n                  required\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"validUntil\">Valid Until (Optional):</label>\n                <input\n                  type=\"date\"\n                  id=\"validUntil\"\n                  value={newPayment.validUntil ? format(newPayment.validUntil, 'yyyy-MM-dd') : ''}\n                  onChange={(e) => setNewPayment({ \n                    ...newPayment, \n                    validUntil: e.target.value ? new Date(e.target.value) : undefined \n                  })}\n                />\n              </div>\n            </div>\n          </div>\n          \n          <button type=\"submit\" className=\"submit-button\">Add Recurring Payment/Income</button>\n        </form>\n      )}\n\n      <div className=\"recurring-payments-list\">\n        {recurringPayments.length === 0 ? (\n          <p className=\"no-payments\">No recurring payments or income added yet.</p>\n        ) : (\n          recurringPayments.map((payment) => (\n            <div key={payment.id} className={`recurring-payment-item ${payment.type}`}>\n              <div className=\"payment-info\">\n                <h3>{payment.description}</h3>\n                <p className=\"amount\">\n                  <span className={payment.type === 'income' ? 'income-amount' : 'expense-amount'}>\n                    ${payment.amount.toFixed(2)}\n                  </span> \n                  <span className=\"type-badge\">{payment.type}</span>\n                </p>\n                <p className=\"schedule\">{formatSchedule(payment)}</p>\n                <p className=\"validity\">\n                  Valid from {format(payment.validFrom, 'MMM dd, yyyy')}\n                  {payment.validUntil && ` until ${format(payment.validUntil, 'MMM dd, yyyy')}`}\n                </p>\n                <p className=\"status\">Status: <span className={payment.isActive ? 'active' : 'inactive'}>\n                  {payment.isActive ? 'Active' : 'Inactive'}\n                </span></p>\n              </div>\n              <div className=\"payment-actions\">\n                <button \n                  onClick={() => onUpdateRecurringPayment({\n                    ...payment,\n                    isActive: !payment.isActive\n                  })}\n                  className={payment.isActive ? 'deactivate-button' : 'activate-button'}\n                >\n                  {payment.isActive ? 'Deactivate' : 'Activate'}\n                </button>\n                <button \n                  onClick={() => {\n                    if (window.confirm('Are you sure you want to delete this recurring payment?')) {\n                      onDeleteRecurringPayment(payment.id);\n                    }\n                  }}\n                  className=\"delete-button\"\n                >\n                  Delete\n                </button>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}