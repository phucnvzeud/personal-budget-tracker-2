{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\personal-budget-tracker\\\\src\\\\components\\\\YearView.tsx\";\nimport React from 'react';\nimport './YearView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Month names for the display\nconst MONTH_NAMES = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nexport const YearView = ({\n  yearData,\n  onMonthClick\n}) => {\n  // Calculate maximum values for visualization scaling\n  const maxIncome = Math.max(...yearData.months.map(month => month.totalIncome));\n  const maxExpense = Math.max(...yearData.months.map(month => month.totalExpenses));\n  const maxValue = Math.max(maxIncome, maxExpense, 1); // Ensure we don't divide by zero\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"year-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"year-title\",\n      children: [yearData.year, \" Overview\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"year-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"year-summary-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-label\",\n          children: \"Total Income:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-value income\",\n          children: [\"$\", yearData.totalIncome.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"year-summary-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-label\",\n          children: \"Total Expenses:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-value expense\",\n          children: [\"$\", yearData.totalExpenses.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"year-summary-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-label\",\n          children: \"Yearly Balance:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `summary-value ${yearData.yearlyBalance >= 0 ? 'income' : 'expense'}`,\n          children: [\"$\", yearData.yearlyBalance.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"month-grid\",\n      children: yearData.months.map(month => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `month-card ${month.monthlyBalance >= 0 ? 'positive' : 'negative'}`,\n        onClick: () => onMonthClick(month.month),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"month-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"month-name\",\n            children: MONTH_NAMES[month.month]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"month-chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-bar income-bar\",\n            style: {\n              height: `${month.totalIncome / maxValue * 100}%`,\n              opacity: month.totalIncome > 0 ? 1 : 0.2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-bar expense-bar\",\n            style: {\n              height: `${month.totalExpenses / maxValue * 100}%`,\n              opacity: month.totalExpenses > 0 ? 1 : 0.2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"month-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"month-income\",\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"Income\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"$\", month.totalIncome.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"month-expenses\",\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"Expenses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"$\", month.totalExpenses.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `month-balance ${month.monthlyBalance >= 0 ? 'positive' : 'negative'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"$\", Math.abs(month.monthlyBalance).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, month.month, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = YearView;\nvar _c;\n$RefreshReg$(_c, \"YearView\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MONTH_NAMES","YearView","yearData","onMonthClick","maxIncome","Math","max","months","map","month","totalIncome","maxExpense","totalExpenses","maxValue","className","children","year","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","yearlyBalance","monthlyBalance","onClick","style","height","opacity","abs","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Downloads/personal-budget-tracker/src/components/YearView.tsx"],"sourcesContent":["import React from 'react';\r\nimport { format } from 'date-fns';\r\nimport { YearData } from '../types';\r\nimport './YearView.css';\r\n\r\ninterface YearViewProps {\r\n  yearData: YearData;\r\n  onMonthClick: (month: number) => void;\r\n}\r\n\r\n// Month names for the display\r\nconst MONTH_NAMES = [\r\n  'January', 'February', 'March', 'April', 'May', 'June',\r\n  'July', 'August', 'September', 'October', 'November', 'December'\r\n];\r\n\r\nexport const YearView: React.FC<YearViewProps> = ({ yearData, onMonthClick }) => {\r\n  // Calculate maximum values for visualization scaling\r\n  const maxIncome = Math.max(...yearData.months.map(month => month.totalIncome));\r\n  const maxExpense = Math.max(...yearData.months.map(month => month.totalExpenses));\r\n  const maxValue = Math.max(maxIncome, maxExpense, 1); // Ensure we don't divide by zero\r\n  \r\n  return (\r\n    <div className=\"year-view\">\r\n      <h2 className=\"year-title\">{yearData.year} Overview</h2>\r\n      \r\n      <div className=\"year-summary\">\r\n        <div className=\"year-summary-item\">\r\n          <div className=\"summary-label\">Total Income:</div>\r\n          <div className=\"summary-value income\">${yearData.totalIncome.toFixed(2)}</div>\r\n        </div>\r\n        <div className=\"year-summary-item\">\r\n          <div className=\"summary-label\">Total Expenses:</div>\r\n          <div className=\"summary-value expense\">${yearData.totalExpenses.toFixed(2)}</div>\r\n        </div>\r\n        <div className=\"year-summary-item\">\r\n          <div className=\"summary-label\">Yearly Balance:</div>\r\n          <div className={`summary-value ${yearData.yearlyBalance >= 0 ? 'income' : 'expense'}`}>\r\n            ${yearData.yearlyBalance.toFixed(2)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"month-grid\">\r\n        {yearData.months.map((month) => (\r\n          <div\r\n            key={month.month}\r\n            className={`month-card ${month.monthlyBalance >= 0 ? 'positive' : 'negative'}`}\r\n            onClick={() => onMonthClick(month.month)}\r\n          >\r\n            <div className=\"month-header\">\r\n              <h3 className=\"month-name\">{MONTH_NAMES[month.month]}</h3>\r\n            </div>\r\n            \r\n            <div className=\"month-chart\">\r\n              <div className=\"chart-bar income-bar\" style={{ \r\n                height: `${(month.totalIncome / maxValue) * 100}%`,\r\n                opacity: month.totalIncome > 0 ? 1 : 0.2\r\n              }}></div>\r\n              <div className=\"chart-bar expense-bar\" style={{ \r\n                height: `${(month.totalExpenses / maxValue) * 100}%`,\r\n                opacity: month.totalExpenses > 0 ? 1 : 0.2\r\n              }}></div>\r\n            </div>\r\n            \r\n            <div className=\"month-data\">\r\n              <div className=\"month-income\">\r\n                <small>Income</small>\r\n                <div>${month.totalIncome.toFixed(2)}</div>\r\n              </div>\r\n              <div className=\"month-expenses\">\r\n                <small>Expenses</small>\r\n                <div>${month.totalExpenses.toFixed(2)}</div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className={`month-balance ${month.monthlyBalance >= 0 ? 'positive' : 'negative'}`}>\r\n              <small>Balance</small>\r\n              <div>${Math.abs(month.monthlyBalance).toFixed(2)}</div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}