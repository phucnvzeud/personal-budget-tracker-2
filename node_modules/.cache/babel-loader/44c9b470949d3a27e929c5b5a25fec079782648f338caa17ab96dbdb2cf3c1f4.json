{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\personal-budget-tracker\\\\src\\\\index.tsx\";\nimport React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\nimport './index.css';\n\n// Wait for DOM to be ready\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndocument.addEventListener('DOMContentLoaded', () => {\n  try {\n    const rootElement = document.getElementById('root');\n    if (!rootElement) {\n      throw new Error('Failed to find the root element');\n    }\n    const root = createRoot(rootElement);\n    root.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this));\n    console.log('React application successfully rendered');\n  } catch (error) {\n    console.error('Failed to render React application:', error);\n\n    // Display a fallback UI if rendering fails\n    const rootElement = document.getElementById('root');\n    if (rootElement) {\n      rootElement.innerHTML = `\n        <div style=\"padding: 20px; text-align: center;\">\n          <h2>Error Loading Application</h2>\n          <p>There was a problem loading the budget tracker application.</p>\n          <p>Please check the console for more details.</p>\n        </div>\n      `;\n    }\n  }\n});","map":{"version":3,"names":["React","createRoot","App","jsxDEV","_jsxDEV","document","addEventListener","rootElement","getElementById","Error","root","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","error","innerHTML"],"sources":["C:/Users/Administrator/Downloads/personal-budget-tracker/src/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\n// Wait for DOM to be ready\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  try {\r\n    const rootElement = document.getElementById('root');\r\n    \r\n    if (!rootElement) {\r\n      throw new Error('Failed to find the root element');\r\n    }\r\n    \r\n    const root = createRoot(rootElement);\r\n    \r\n    root.render(\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>\r\n    );\r\n    \r\n    console.log('React application successfully rendered');\r\n  } catch (error) {\r\n    console.error('Failed to render React application:', error);\r\n    \r\n    // Display a fallback UI if rendering fails\r\n    const rootElement = document.getElementById('root');\r\n    if (rootElement) {\r\n      rootElement.innerHTML = `\r\n        <div style=\"padding: 20px; text-align: center;\">\r\n          <h2>Error Loading Application</h2>\r\n          <p>There was a problem loading the budget tracker application.</p>\r\n          <p>Please check the console for more details.</p>\r\n        </div>\r\n      `;\r\n    }\r\n  }\r\n});\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,aAAa;;AAEpB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAClD,IAAI;IACF,MAAMC,WAAW,GAAGF,QAAQ,CAACG,cAAc,CAAC,MAAM,CAAC;IAEnD,IAAI,CAACD,WAAW,EAAE;MAChB,MAAM,IAAIE,KAAK,CAAC,iCAAiC,CAAC;IACpD;IAEA,MAAMC,IAAI,GAAGT,UAAU,CAACM,WAAW,CAAC;IAEpCG,IAAI,CAACC,MAAM,cACTP,OAAA,CAACJ,KAAK,CAACY,UAAU;MAAAC,QAAA,eACfT,OAAA,CAACF,GAAG;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CACpB,CAAC;IAEDC,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;EACxD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;;IAE3D;IACA,MAAMb,WAAW,GAAGF,QAAQ,CAACG,cAAc,CAAC,MAAM,CAAC;IACnD,IAAID,WAAW,EAAE;MACfA,WAAW,CAACc,SAAS,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA,OAAO;IACH;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}