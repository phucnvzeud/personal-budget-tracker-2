{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\personal-budget-tracker\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nconst LOCAL_STORAGE_USER_KEY = 'budget-tracker-user';\nconst LOCAL_STORAGE_USERS_KEY = 'budget-tracker-users';\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // On init, check for saved user\n  useEffect(() => {\n    const storedUser = localStorage.getItem(LOCAL_STORAGE_USER_KEY);\n    if (storedUser) {\n      try {\n        setCurrentUser(JSON.parse(storedUser));\n      } catch (error) {\n        console.error('Failed to parse stored user data', error);\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  // Save user data when it changes\n  useEffect(() => {\n    if (currentUser) {\n      localStorage.setItem(LOCAL_STORAGE_USER_KEY, JSON.stringify(currentUser));\n    } else {\n      localStorage.removeItem(LOCAL_STORAGE_USER_KEY);\n    }\n  }, [currentUser]);\n\n  // Get users from local storage\n  const getUsers = () => {\n    const storedUsers = localStorage.getItem(LOCAL_STORAGE_USERS_KEY);\n    return storedUsers ? JSON.parse(storedUsers) : {};\n  };\n\n  // Save users to local storage\n  const saveUsers = users => {\n    localStorage.setItem(LOCAL_STORAGE_USERS_KEY, JSON.stringify(users));\n  };\n  const login = async (email, password) => {\n    // This would be an API call in a real app\n    setLoading(true);\n    try {\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 500));\n      const users = getUsers();\n      const user = users[email];\n      if (user && user.password === password) {\n        setCurrentUser({\n          id: user.id,\n          username: user.username,\n          email\n        });\n        setLoading(false);\n        return true;\n      }\n      setLoading(false);\n      return false;\n    } catch (error) {\n      console.error('Login error:', error);\n      setLoading(false);\n      return false;\n    }\n  };\n  const register = async (username, email, password) => {\n    // This would be an API call in a real app\n    setLoading(true);\n    try {\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 500));\n      const users = getUsers();\n\n      // Check if email is already registered\n      if (users[email]) {\n        setLoading(false);\n        return false;\n      }\n\n      // Generate a unique user ID\n      const userId = `user_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\n      // Create a new user\n      users[email] = {\n        id: userId,\n        username,\n        password\n      };\n\n      // Save to local storage\n      saveUsers(users);\n\n      // Log the user in\n      setCurrentUser({\n        id: userId,\n        username,\n        email\n      });\n      setLoading(false);\n      return true;\n    } catch (error) {\n      console.error('Registration error:', error);\n      setLoading(false);\n      return false;\n    }\n  };\n  const logout = () => {\n    setCurrentUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      isAuthenticated: !!currentUser,\n      login,\n      register,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"glPFyssxmgyFBfEUyUTyfs2Yb0g=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","LOCAL_STORAGE_USER_KEY","LOCAL_STORAGE_USERS_KEY","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","storedUser","localStorage","getItem","JSON","parse","error","console","setItem","stringify","removeItem","getUsers","storedUsers","saveUsers","users","login","email","password","Promise","resolve","setTimeout","user","id","username","register","userId","Date","now","Math","random","toString","substr","logout","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Administrator/Downloads/personal-budget-tracker/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, ReactNode } from 'react';\r\n\r\ninterface User {\r\n  id: string;\r\n  username: string;\r\n  email: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  currentUser: User | null;\r\n  isAuthenticated: boolean;\r\n  login: (email: string, password: string) => Promise<boolean>;\r\n  register: (username: string, email: string, password: string) => Promise<boolean>;\r\n  logout: () => void;\r\n  loading: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | null>(null);\r\n\r\nconst LOCAL_STORAGE_USER_KEY = 'budget-tracker-user';\r\nconst LOCAL_STORAGE_USERS_KEY = 'budget-tracker-users';\r\n\r\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // On init, check for saved user\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem(LOCAL_STORAGE_USER_KEY);\r\n    if (storedUser) {\r\n      try {\r\n        setCurrentUser(JSON.parse(storedUser));\r\n      } catch (error) {\r\n        console.error('Failed to parse stored user data', error);\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Save user data when it changes\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      localStorage.setItem(LOCAL_STORAGE_USER_KEY, JSON.stringify(currentUser));\r\n    } else {\r\n      localStorage.removeItem(LOCAL_STORAGE_USER_KEY);\r\n    }\r\n  }, [currentUser]);\r\n\r\n  // Get users from local storage\r\n  const getUsers = (): { [email: string]: { id: string; username: string; password: string } } => {\r\n    const storedUsers = localStorage.getItem(LOCAL_STORAGE_USERS_KEY);\r\n    return storedUsers ? JSON.parse(storedUsers) : {};\r\n  };\r\n\r\n  // Save users to local storage\r\n  const saveUsers = (users: { [email: string]: { id: string; username: string; password: string } }) => {\r\n    localStorage.setItem(LOCAL_STORAGE_USERS_KEY, JSON.stringify(users));\r\n  };\r\n\r\n  const login = async (email: string, password: string): Promise<boolean> => {\r\n    // This would be an API call in a real app\r\n    setLoading(true);\r\n    \r\n    try {\r\n      // Simulate API delay\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n      \r\n      const users = getUsers();\r\n      const user = users[email];\r\n      \r\n      if (user && user.password === password) {\r\n        setCurrentUser({\r\n          id: user.id,\r\n          username: user.username,\r\n          email\r\n        });\r\n        setLoading(false);\r\n        return true;\r\n      }\r\n      \r\n      setLoading(false);\r\n      return false;\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      setLoading(false);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const register = async (username: string, email: string, password: string): Promise<boolean> => {\r\n    // This would be an API call in a real app\r\n    setLoading(true);\r\n    \r\n    try {\r\n      // Simulate API delay\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n      \r\n      const users = getUsers();\r\n      \r\n      // Check if email is already registered\r\n      if (users[email]) {\r\n        setLoading(false);\r\n        return false;\r\n      }\r\n      \r\n      // Generate a unique user ID\r\n      const userId = `user_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n      \r\n      // Create a new user\r\n      users[email] = {\r\n        id: userId,\r\n        username,\r\n        password\r\n      };\r\n      \r\n      // Save to local storage\r\n      saveUsers(users);\r\n      \r\n      // Log the user in\r\n      setCurrentUser({\r\n        id: userId,\r\n        username,\r\n        email\r\n      });\r\n      \r\n      setLoading(false);\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      setLoading(false);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setCurrentUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser,\r\n        isAuthenticated: !!currentUser,\r\n        login,\r\n        register,\r\n        logout,\r\n        loading\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}